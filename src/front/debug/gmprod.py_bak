# -*- coding: utf-8 -*-

import time
import zlib
from twisted.internet import defer
from cyclone import escape, web
from front import storage
from front import utils
from front.utils import E
from front.handlers.base import BaseHandler

class EditProdHandler(BaseHandler):

    @storage.databaseSafe
    @defer.inlineCallbacks
    @utils.signed
    def get(self):
        try:
            pid = self.get_argument("pid")
            nu = int(self.get_argument("nu", 1))
        except Exception:
            raise web.HTTPError(400, "Argument error")

        uid = self.uid
        user = yield self.get_user(uid)
        curnu = user['prods'].get('pid', 0)
        if nu > 0:
            if pid in user['prods']:
                user['prods'][pid] = nu
            else:
                user['prods'][pid] = nu
        else:
            if pid in user['prods']:
                del user['prods'][pid]

        print "uid:",uid
        cuser = dict(prods=user['prods'])
        yield self.set_user(uid, **cuser)
        self.write("ok!")
        #self.redirect("/sync/?_sign=" + self.sign)
